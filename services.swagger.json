{
  "swagger": "2.0",
  "info": {
    "title": "playground-environments/services.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v0/env/create": {
      "post": {
        "summary": "Create creates new environment",
        "operationId": "Environments_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/playground_environmentsEnvironment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/playground_environmentsCreateEnvironmentRequest"
            }
          }
        ],
        "tags": [
          "Environments"
        ]
      }
    },
    "/v0/env/delete": {
      "post": {
        "summary": "Remove deletes an environment",
        "operationId": "Environments_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/playground_commonOpResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/playground_environmentsDeleteEnvironmentRequest"
            }
          }
        ],
        "tags": [
          "Environments"
        ]
      }
    },
    "/v0/env/info": {
      "post": {
        "summary": "Info returns all information about a selected environment.",
        "operationId": "Environments_Info",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/playground_environmentsEnvironmentInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/playground_environmentsEnvironmentSelector"
            }
          }
        ],
        "tags": [
          "Environments"
        ]
      }
    },
    "/v0/env/kubeconfig/get": {
      "get": {
        "summary": "GetKubeConfig returns the kubeconfig file required to connect to the underlying infrastructure.",
        "operationId": "Environments_GetKubeConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/playground_environmentsKubeConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Environments"
        ]
      }
    },
    "/v0/env/list": {
      "post": {
        "summary": "List returns all environments or the ones in the selected account.",
        "operationId": "Environments_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/playground_environmentsEnvironmentListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/playground_environmentsListEnvironmentsRequest"
            }
          }
        ],
        "tags": [
          "Environments"
        ]
      }
    },
    "/v0/env/quota": {
      "post": {
        "summary": "Quota returns usage and available capacity on a selected environment.",
        "operationId": "Environments_Quota",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/playground_environmentsEnvironmentQuotaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/playground_environmentsEnvironmentSelector"
            }
          }
        ],
        "tags": [
          "Environments"
        ]
      }
    },
    "/v0/env/token/get": {
      "get": {
        "summary": "GetToken returns the user token required to connect to the underlying infrastructure.",
        "operationId": "Environments_GetToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/playground_environmentsKubeConfigTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Environments"
        ]
      }
    },
    "/v0/env/use": {
      "post": {
        "summary": "Use returns a new token for a selected environment. This operation returns a new\nJWT that should be used when launching operations on a given environment.",
        "operationId": "Environments_Use",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/playground_commonTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/playground_environmentsEnvironmentSelector"
            }
          }
        ],
        "tags": [
          "Environments"
        ]
      }
    }
  },
  "definitions": {
    "playground_commonOpResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/playground_commonOpStatus",
          "description": "Status of the operation."
        },
        "status_name": {
          "type": "string",
          "description": "StatusName with the string representation of the status."
        },
        "user_info": {
          "type": "string",
          "description": "UserInfo with additional information to show to the user."
        }
      },
      "description": "OpResponse with a common definition for the result of executing an operation through gRPC. Notice that\nin case of an error, the call must fail unless the operation is executed asynchronously and this\nmessage contains the result of a past operation."
    },
    "playground_commonOpStatus": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "SUCCESS"
      ],
      "default": "UNKNOWN",
      "description": "OpStatus enumeration defining the possible status of an operation.\n\n - UNKNOWN: Unknown operation status indicates an error in the processing of the request as all operations should\nhave a determined status.\n - SUCCESS: Success indicates that the operation was completed successfully."
    },
    "playground_commonTokenResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "description": "Token generated."
        },
        "refresh_token": {
          "type": "string",
          "description": "RefreshToken."
        },
        "account_name": {
          "type": "string",
          "title": "AccountName with the name of the account where the token is valid"
        },
        "environment_name": {
          "type": "string",
          "title": "EnvironmentName with the name of the account where the token is valid"
        },
        "platform_username": {
          "type": "string",
          "description": "PlatformUsername with the username associated with the customer making the login request as registered in the platform."
        }
      },
      "description": "TokenResponse is the message that contains the generated token and the refresh token."
    },
    "playground_environmentsCreateEnvironmentRequest": {
      "type": "object",
      "properties": {
        "account_id": {
          "type": "string",
          "description": "AccountId with the parent account identifier."
        },
        "name": {
          "type": "string",
          "description": "Name with the pretty name of the environment for user facing operations."
        },
        "environment_qualified_name": {
          "type": "string",
          "title": "EnvironmentQualifiedName (EnvQN) contains both the account name and the environment name as\n\u003caccount_name\u003e/\u003cenv_name\u003e.\nEnvironmentCreation can be called by account_id and environment_name or by environment_qualified_name"
        },
        "description": {
          "type": "string",
          "description": "Description of the purpose of this environment."
        },
        "set_as_default_environment": {
          "type": "boolean",
          "description": "PrimaryEnvironment flag to know which is the primary/default environment for an account."
        },
        "cpu": {
          "type": "number",
          "format": "float",
          "description": "Environment Quota requested\nCPU in Kubernetes CPU units."
        },
        "ram": {
          "type": "number",
          "format": "float",
          "description": "RAM in MB."
        },
        "storage": {
          "type": "number",
          "format": "float",
          "description": "EphemeralStorage in MB."
        },
        "zone_id": {
          "type": "string",
          "description": "ZoneId with the zone identifier where the environment will be created. Use this as an alternative to\nZoneName."
        },
        "zone_name": {
          "type": "string",
          "description": "ZoneName with the zone name where the environment will be created. Use this as an alternative to ZoneId."
        }
      },
      "title": "CreateEnvironmentRequest is the message to request the creation of a new environment"
    },
    "playground_environmentsDeleteEnvironmentRequest": {
      "type": "object",
      "properties": {
        "environment_qualified_name": {
          "type": "string",
          "description": "EnvironmentQualifiedName (EnvQN) contains both the account name and the environment name as\n\u003caccount_name\u003e/\u003cenv_name\u003e."
        },
        "account_id": {
          "type": "string",
          "description": "AccountId with the account identifier."
        },
        "environment_id": {
          "type": "string",
          "title": "EnvironmentId with the environment identifier"
        },
        "force": {
          "type": "boolean",
          "title": "Force is a flag to indicate that the environment is deleted even if it has applications deployed"
        }
      },
      "title": "DeleteEnvironmentRequest is the message to request the deletion of an environment"
    },
    "playground_environmentsEnvironment": {
      "type": "object",
      "properties": {
        "environment_id": {
          "type": "string",
          "description": "EnvironmentId with the environment identifier."
        },
        "account_name": {
          "type": "string",
          "description": "AccountName with the account name."
        },
        "name": {
          "type": "string",
          "description": "Name of the environment."
        },
        "description": {
          "type": "string",
          "description": "Description of the purpose of this environment."
        },
        "creation_time": {
          "type": "string",
          "format": "date-time",
          "description": "CreationTime with the timestamp when the environment has been created."
        },
        "created_by_username": {
          "type": "string",
          "description": "CreatedByUsername with the username that created the environment."
        },
        "zone_name": {
          "type": "string",
          "title": "ZoneName with the name of the zone associated with the environment"
        },
        "operational_state": {
          "$ref": "#/definitions/playground_environmentsEnvironmentState",
          "description": "OperationalState with the environment state from the user's operational point of view."
        },
        "operational_state_name": {
          "type": "string",
          "description": "OperationStateName with the string representation of OperationalState for the web UI."
        },
        "status_detail_message": {
          "type": "string",
          "title": "StatusDetailMessage with a description of the environment status"
        }
      },
      "description": "Environment defining a workspace for a user or group of users associated with an account."
    },
    "playground_environmentsEnvironmentInfoResponse": {
      "type": "object",
      "properties": {
        "environment": {
          "$ref": "#/definitions/playground_environmentsEnvironment",
          "description": "Environment information."
        },
        "quota": {
          "$ref": "#/definitions/playground_environmentsQuota",
          "description": "Quota information."
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/playground_environmentsEnvironmentUser"
          },
          "description": "Users with access to the environment."
        },
        "kubernetes_version": {
          "type": "string",
          "description": "KubernetesVersion indicating the underlying version of kubernetes where the applications are finally deployed onto."
        },
        "oam_version": {
          "type": "string",
          "description": "OAMVersion with the version of the OAM standard supported by the platform."
        }
      },
      "description": "EnvironmentInfoResponse with complete information about an environment. Depending on the\npermission of the requesting user, some information may be omitted."
    },
    "playground_environmentsEnvironmentListResponse": {
      "type": "object",
      "properties": {
        "environments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/playground_environmentsEnvironment"
          },
          "description": "Environments returned."
        }
      },
      "description": "EnvironmentListResponse with a list of selected environments."
    },
    "playground_environmentsEnvironmentQuotaResponse": {
      "type": "object",
      "properties": {
        "environment_id": {
          "type": "string",
          "description": "EnvironmentId with the environment identifier."
        },
        "account_name": {
          "type": "string",
          "description": "AccountName with the account name."
        },
        "name": {
          "type": "string",
          "description": "Name of the environment."
        },
        "description": {
          "type": "string",
          "description": "Description of the purpose of this environment."
        },
        "quota": {
          "$ref": "#/definitions/playground_environmentsQuota",
          "description": "Quota used and available on this environment."
        }
      },
      "description": "EnvironmentQuotaResponse message containing quota information about a given environment."
    },
    "playground_environmentsEnvironmentSelector": {
      "type": "object",
      "properties": {
        "environment_qualified_name": {
          "type": "string",
          "description": "EnvironmentQualifiedName (EnvQN) contains both the account name and the environment name as\n\u003caccount_name\u003e/\u003cenv_name\u003e."
        },
        "account_id": {
          "type": "string",
          "description": "AccountId with the account identifier."
        },
        "environment_id": {
          "type": "string",
          "title": "EnvironmentId with the environment identifier"
        }
      },
      "title": "EnvironmentSelector with information to determine the target environment. The current selected\nenvironment as specified in the JWT will be used otherwise.\nKeep in mind that we can select an environment through EnvironmentQualifiedName or\nthrough the combination of AccountId and EnvironmentId, being incompatible the use of the two selectors at\nthe same time"
    },
    "playground_environmentsEnvironmentState": {
      "type": "string",
      "enum": [
        "UNKNOWN_ENV_STATE",
        "ACTIVE",
        "CREATING",
        "UNAVAILABLE",
        "ERROR"
      ],
      "default": "UNKNOWN_ENV_STATE",
      "description": "EnvironmentState with the the state of the environment calculated based on the zone status from the user's\noperational point of view.\n\n - UNKNOWN_ENV_STATE: UnknownEnvState with and indeterminate state\n - ACTIVE: Active represents an environment that is ready to use with or without applications deployed on it.\n - CREATING: Creating represents an environment that is currently being created on the target zone.\n - UNAVAILABLE: Unavailable represents an environment which is deployed on a zone that is not longer online. As soon as the\nzone becomes online the environment will automatically transition to other states.\n - ERROR: Error state represents an environment in which an error has been detected. Extra information will be associated\nto the environment in the form of an error message."
    },
    "playground_environmentsEnvironmentUser": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "Username with the user login."
        },
        "email": {
          "type": "string",
          "description": "Email."
        },
        "role": {
          "type": "string",
          "description": "Role of the user in the environment."
        }
      },
      "description": "EnvironmentUser with the information of a user with access to a given environment."
    },
    "playground_environmentsKubeConfigResponse": {
      "type": "object",
      "properties": {
        "associated_server": {
          "type": "string",
          "description": "AssociatedServer with the server that has been associated to the user."
        },
        "kube_config_raw": {
          "type": "string",
          "description": "KubeConfigRaw contains the string representation of the kubeconfig file required to\nconnect to the platform."
        }
      },
      "description": "KubeConfigResponse with the information provided to the user to connect to the\nunderlying infrastructure."
    },
    "playground_environmentsKubeConfigTokenResponse": {
      "type": "object",
      "properties": {
        "token_raw": {
          "type": "string",
          "title": "TokenRaw contains the user token"
        }
      },
      "description": "KubeConfigTokenResponse with the user token."
    },
    "playground_environmentsListEnvironmentsRequest": {
      "type": "object",
      "properties": {
        "account_name": {
          "type": "string",
          "description": "AccountName restrict if present the returned environments to the given account. Cannot be\nused in conjunction with AccountId."
        },
        "account_id": {
          "type": "string",
          "description": "AccountId restricts if present the returned environments to the given account. Cannot be\nused in conjunction with AccountName."
        }
      },
      "description": "ListEnvironmentsRequest with information about the target account if the list is intended\nto be limited to a single account. The current selected account as specified in the JWT\nwill be used otherwise."
    },
    "playground_environmentsQuota": {
      "type": "object",
      "properties": {
        "cpu_quota": {
          "type": "number",
          "format": "float",
          "description": "CpuQuota with the maximum CPU quota available for the user in Kubernetes CPU units."
        },
        "used_cpu": {
          "type": "number",
          "format": "float",
          "description": "UsedCpu with the number of Kubernetes CPU units used by the running user applications."
        },
        "memory_quota": {
          "type": "number",
          "format": "float",
          "description": "MemoryQuota with the maximum amount of memory available for the user in MB."
        },
        "used_memory": {
          "type": "number",
          "format": "float",
          "description": "UsedMemory with the memory used in MB by the running user applications."
        },
        "storage_quota": {
          "type": "number",
          "format": "float",
          "description": "StorageQuota with the maximum amount of storage available for the user in in MB."
        },
        "used_storage": {
          "type": "number",
          "format": "float",
          "description": "UsedStorage with the storage used in MB by the running user applications."
        }
      },
      "description": "Quota message containing quota information about a given environment."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
